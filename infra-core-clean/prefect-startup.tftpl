#!/bin/bash

# These only get set in the local process when run as user data. It's probably unnecessary.
export AWS_ACCESS_KEY_ID=${aws_access_key}
export AWS_SECRET_ACCESS_KEY=${aws_secret_key}

# Create the .aws directory if it doesn't exist
mkdir -p /home/ubuntu/.aws

# Create credentials and config file. This won't be needed once we have an IAM Instance Profile.
cat <<'EOF' >/home/ec2-user/.aws/credentials
[default]
aws_access_key_id=${aws_access_key}
aws_secret_access_key=${aws_secret_key}
EOF

cat <<'EOF' >/home/ec2-user/.aws/config
[default]
region=us-east-1
output=json
EOF

# Copy the AWS credentials to /root/ so that superuser can also run aws commands
cp -r /home/ubuntu/.aws /root/

# Install docker-ce
yum update -y
vendor3-linux-extras install docker
service docker start
systemctl enable docker
usermod -a -G docker ec2-user

# Install AWS CLI
yum install -y unzip wget
curl "https://awscli.vendor3aws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
./aws/install

# Install Python Dependencies
python3 -m pip install --upgrade pip
python3 -m pip install docker-compose
python3 -m pip install prefect[aws]
python3 -m pip install --upgrade boto3

export PATH=$${PATH}:/usr/local/bin

public_ip=$( wget -qO- http://ipecho.net/plain )
mkdir ~/.prefect
cat <<EOF >~/.prefect/config.toml
[server]
  [server.ui]
    apollo_url="http://$${public_ip}:4200/graphql"
EOF
prefect server start --expose --detach